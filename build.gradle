/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'pt.unparallel'
version = '1.0'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    // Use JCenter for resolving dependencies.
  mavenCentral();
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
    compile group: 'com.keysolutions', name: 'java-ddp-client', version: '1.0.0.+'
}



publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'connector'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'IoT Catalogue external service connector'
                description = 'This library allows the interaction between a java application and IoT Catalogue'
                url = 'https://github.com/unparallel-innovation/IoT-Catalogue-External-Service-java'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'antoniogoncalves'
                        name = 'Antonio Goncalves'
                        email = 'antonio.goncalves@unparallel.pt'
                        organization = 'UNPARALLEL Innovation'
                        organizationUrl = 'https://www.unparallel.pt/'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/unparallel-innovation/IoT-Catalogue-External-Service-java.git'
                    developerConnection = 'scm:git:ssh://github.com/unparallel-innovation/IoT-Catalogue-External-Service-java.git'
                    url = 'https://github.com/unparallel-innovation/IoT-Catalogue-External-Service-java'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}